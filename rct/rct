#!/usr/bin/perl

use strict;

use Carp::Assert 'assert';
use String::ShellQuote ( 'shell_quote' );

use constant { term_emu_program => '/usr/bin/rxvt',
	       term_font => 'terminus-koi8-r-32' }; #-xos4-terminus-medium-r-normal-*-*-240-*-*-c-*-koi8-r' };

&main();


################################################################################

sub main
{
	my ( $bgcol, $fgcol ) = &get_term_colors();

	&run_terminal( $bgcol, $fgcol );
}

sub get_rand_bg_color
{

	my $rv = undef;
	my $safety = 0;

oZM6O09TZRi0weQH:
	while( 1 )
	{
		$rv = &get_rand_color();
		if( &bg_color_ok( $rv ) )
		{
			last oZM6O09TZRi0weQH;
		}
		$safety ++;
		assert( $safety < 100 );
	}

	return $rv;
}

sub bg_color_ok
{
	my $c3 = shift;

	my $avg = ( $c3 -> [ 0 ] + $c3 -> [ 1 ] + $c3 -> [ 2 ] ) / 3;

	my $rv = 1;
	my $thresh = 50;

	if( ( abs( $c3 -> [ 0 ] - $avg ) > $thresh )
	    or
	    ( abs( $c3 -> [ 1 ] - $avg ) > $thresh )
	    or
	    ( abs( $c3 -> [ 2 ] - $avg ) > $thresh ) )
	{
		$rv = 0;
	}
	    
	return $rv;
}

sub get_term_colors
{

	my ( $bgcol, $fgcol, $safety ) = ( undef, undef, 0 );

mZPwhe7DuSEW4vhC:
	while( 1 )
	{
		$fgcol = &get_rand_color();
		$bgcol = &get_rand_bg_color(); 
		
		if( &contrast_is_ok( $bgcol, $fgcol ) )
		{
			last mZPwhe7DuSEW4vhC;
		}
		
		assert( $safety < 1000 );
		$safety ++;
	}

	return ( $bgcol, $fgcol );
}

sub run_terminal
{
	my ( $bgcol, $fgcol ) = @_;
	
	$fgcol = &ht( $fgcol );
	$bgcol = &ht( $bgcol );

	my $cmd = sprintf( '%s -bg %s -fg %s -fn %s %s',
			   shell_quote( &term_emu_program() ),
			   shell_quote( $bgcol ),
			   shell_quote( $fgcol ),
			   shell_quote( &term_font() ),
			   join( " ", map { scalar shell_quote( $_ ) } @ARGV ) );

	exec( $cmd );
}

sub contrast_is_ok
{
	my ( $c1, $c2 ) = @_;

	my $rv = 0;
	
	my $d1 = $c1 -> [ 0 ] - $c2 -> [ 0 ];
	my $d2 = $c1 -> [ 1 ] - $c2 -> [ 1 ];
	my $d3 = $c1 -> [ 2 ] - $c2 -> [ 2 ];

	if( ( ( $d1 > 0 )
	      and
	      ( $d2 > 0 )
	      and
	      ( $d3 > 0 ) )
	    or
	    ( ( $d1 < 0 )
	      and
	      ( $d2 < 0 )
	      and
	      ( $d3 < 0 ) ) )
	{
		if( ( $d1 > 100 )
		    and
		    ( $d2 > 100 )
		    and
		    ( $d3 > 100 ) )
		{
			$rv = 1;
		}
	}

	return $rv;
}

sub ht
{
	my $c3 = shift;

	return sprintf( '#%02x%02x%02x', @{ $c3 } );
}

sub get_rand_color
{
	my @t = ( int( rand( 256 ) ),
		  int( rand( 256 ) ),
		  int( rand( 256 ) ) );

	return \@t;
}
